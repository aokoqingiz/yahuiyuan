web服务器，学好一门脚本语言，学习微博、框架。数据库。

dockerr是用来做软件发布的一个软件，是一个工具，用来打包软件运行环境和基于运行环境开发的软件

DOM文档对象模型，在网页上，组织页面(或文档)的对象被组织在一个树形结构中，用来表示文档中对象的标准模型就称为DOM。
核心 DOM
用于任何结构化文档的标准模型
XML DOM
用于 XML 文档的标准模型
HTML DOM
用于 HTML 文档的标准模型

sql注入与xss攻击的相同点与不同点：sql注入主要是对服务器端进行攻击，而xss主要对客户端进行攻击。

xss攻击类型：
反射型XSS： 
服务器未对用户请求参数做任何编码或转义处理，直接将参数作为响应的一部分输出到页面中。反射型XSS是一次性的，很容易实施钓鱼攻击，即诱使被攻击者点
击某条恶意链接就可触发漏洞。 

存储型XSS： 
攻击者提供一个恶意负载输入并在后台保存一段时间，一旦用户访问含恶意程序的网页文件便形成有效攻击。富文本输入空间，都有存储型XSS的漏洞隐患，最严重
可能导致XSS蠕虫。

linux下的性能监控和优化命令：
top命令：top命令能够实时监控系统的运行状态，并且可以按照CPU、内存和执行时间进行排序，同时top命令还可以通过交互式命令进行设定显示

shell是什么？
是命令行，终端，也可以直接编写脚本，其中包含一系列shell语句和linux命令。
shell学习！

gdb如何进行调试？
学习！

很多的linux命令！grep等。

c++编辑器：EMACS，VI

c++使用makefile学习！

海量数据问题！

怎样设计高并发系统？
http连接池，扩容，动静分离，限流，缓存，服务降级等。
数据库更新问题：
悲观锁，乐观锁
排序算法
最短路径算法，最小生成树算法，深度优先搜索算法，排序算法，KMP算法等等

B树，哈夫曼树，红黑树，平衡树等


如何生成静态库？如何生成动态库？静态库和动态库的区别
什么是库 
静态库：在程序编译时会被连接到目标代码中，程序运行时将不再依赖静态库。 
动态库：在程序编译时并不会被连接到目标代码中，而是在程序运行是才被载入，因此在程序运行时还需要动态库存在
? 标准库函数和系统调用的区别？ 
库是可重用的模块,处于用户态;系统调用是os提供的服务,处于内核态,是指最底层的一个调用.库函数中有很大部分是对系统调用的封装


运行了几天的程序崩掉，如何分析错误
首先在调试环境的console或log文件中，根据错误信息的内容初步判断错误类型与位置，比如实际为null的内存被使用，当然也可能是其他错误，在这个位置加入断点，一旦执行该行，程序即崩溃（无法调试的环境下则加入充分的debug信息），再次运行程序，在这一点上监视各个变量，找到导致崩溃的变量值，向上追溯，找到赋值操作的根源时，错误的原因也就找到了，接下来就是讨论对策与解决方案


define与inline的区别

计算机从电源加载开始的启动过程
启动引导程序BIOS-开机自检-加载操作系统（从磁盘读到RAM中）-读取配置文件）

同步、异步、阻塞、非阻塞
同步和异步关注的是消息通信机制。 
同步是A发出一个调用后等待B完成返回结果再继续向下执行； 
异步是A不需等待返回结果，继续处理其他事情，等B完成后再取回结果。

阻塞和非阻塞关注的是程序在等待调用结果（消息，返回值）时的状态. 
阻塞是指调用结果返回之前，当前线程会被挂起，线程只有在得到结果之后才会返回。 
非阻塞指没有得到返回结果之前，该调用不会阻塞当前线程。

select，poll，epoll都是IO多路复用的机制。I/O多路复用就通过一种机制，可以监视多个描述符，一旦某个描述符就绪（一般是读就绪或者写就绪），能够通知程序进行相应的读写操作。但select，poll，epoll本质上都是同步I/O，因为他们都需要在读写事件就绪后自己负责进行读写，也就是说这个读写过程是阻塞的，而异步I/O则无需自己负责进行读写，异步I/O的实现会负责把数据从内核拷贝到用户空间。

怎样创建一个守护进程：
1、fork()创建子进程，然后退出父进程，就可以完成在后台运行的目的
2、调用setsid()创建新会话，此时子进程成为新的会话组长
3、使其不再是会话组长，用以禁止其打开终端，通过fork()产生子进程，然后退出父进程来做到这一点
4、关闭已经打开文件描述符，这里的作用是避免对资源的占用
5、更改当前工作目录
6、重设文件掩码
线程之间的通信方式：全局变量，消息队列，事件。

协程：协程不是被操作系统内核所管理，而完全是由程序所控制（也就是在用户态执行），不需要锁机制，也不需要线程的切换，更快。

如何查看链接的动态库ldd命令

debug 模式和 release 模式编译的区别”debug模式没有经过任何优化，包含有调试信息。

编译器的编译过程？链接的时候做了什么事？在中间层优化时怎么做?
预处理，编译，汇编，链接，链接时将目标文件以及库文件连接在一起称为可执行文件。中间层优化有：常量传播，常量折叠，循环交换，循环合并，不执行的代码删除

运行了几天的程序崩掉，如何分析错误：查看日志文件，定位错误，解决错误。

如何调试运行中的程序

coredump 查看，core 文件分析

如何生成静态库？如何生成动态库：有代码。

const static 在哪里初始化在类外初始化，与static一样。但没有初始化也会有const的值，而且确实是每个对象都有一份。

#define 和 inline 函数的区别是什么define不进行类型检查，只是单纯的替换，不够安全
指针一定是 4 个字节吗 不一定，成员函数指针不一定是4个字节。

如果父类中仅有方法，子类有一个 int 变量，这时候 sizeof 是多大，4个字节，方法不影响类大小。

说说虚函数实现机制：虚函数表。

C++ 的菱形继承会发生什么问题？画出对应的内存布局。会导致有两个基类，直接引用会产生二义性


static 关键字有哪些用法，全局变量，全局函数，成员函数，成员变量

什么情况下基类的析构函数没有被调用？当指向派生类的指针的基类的析构函数没有使用虚函数时。


md5、sha1 的实现：加密算法，用于数据完整性确认。
使用加密函数中的单项散列（Hash）函数。单项散列（Hash）函数是一种单项密码体制，它是一个从明文到密文的不可逆函数，也就是说，是无法解密的。通常应用在只需要加密、不需要解密的特殊应用场合。单项散列（Hash）函数H(M)作用于一任意长度的消息M，它返回一固定长度的散列值h:h=H(M)作为初始消息的独一无二的“数字指纹”，从而能保证数据的完整性和惟一性。

作者：sys1211
链接：https://www.jianshu.com/p/d6b491b235fe
來源：简书
简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。



说说 HTTP 协议
HTTP 1.0 和 HTTP 1.1 的差别？ 
HTTP 1.1支持长连接（PersistentConnection）和请求的流水线（Pipelining）处理
HTTP 1.1增加host字段
HTTP/1.1加入了一个新的状态码100（Continue）。客户端事先发送一个只带头域的请求，如果服务器因为权限拒绝了请求，就回送响应码401（Unauthorized）；如果服务器接收此请求就回送响应码100，客户端就可以继续发送带实体的完整请求了。100 (Continue) 状态代码的使用，允许客户端在发request消息body之前先用request header试探一下server，看server要不要接收request body，再决定要不要发request body。
HTTP 1.1的持续连接，也需要增加新的请求头来帮助实现，例如，Connection请求头的值为Keep-Alive时，客户端通知服务器返回本次请求结果后保持连接；Connection请求头的值为close时，客户端通知服务器返回本次请求结果后关闭连接。HTTP 1.1还提供了与身份认证、状态管理和Cache缓存等机制相关的请求头和响应头。

http状态码
第一次访问 200
按F5刷新（第二次访问） 304
按Ctrl+F5强制刷新 200

如何判断服务器文件是否已修改？知道浏览器缓存的文件与服务器文件不一致？在 HTTP 中哪个字段
在首部行中会给出相应的信息。


局域网没有 ip 时如何通信？如何得知 mac 地址
网桥（交换机）可以根据mac地址转发包
利用广播得到mac地址的转发出口和入口，但是如果主机过多可能会产生广播风暴

tcp ip 层的意义是保证数据能够在网络中按照正确且快速的路径传输到目的主机。

进程 accept 时在哪里取得套接字

什么是网络虚拟化

vpn 工作原理

TCP 对网络拥堵的判断

TCP 几种拥塞机制的重传机制
--------------------- 
指针对应的地址是不是物理地址

物理地址和虚拟地址通常叫做什么？缩写是什么

操作系统的寻址方式

linux 中如何计算可用内存

linux 中如何用 top 命令中查看虚地址和实地址的信息

如何用搜索引擎去了解 top 中的虚地址？不用搜索引擎怎么知道

top 的输出中哪些是表明了内存

根据 top 计算可用内存有多少

用 top 看耗性能的线程

还有哪些命令可以找出性能瓶颈

epoll 与 select 比较

epoll 的缺点，如何克服缺点

epoll 机制中文件描述符就绪时如何从内核态通知到用户态的进程

epoll 实现

说说同步 异步的区别

进程间的通信有哪些机制？在资源内存方面比较如何

同一进程线程间的通信；不同进程线程间的通信；

如何判断系统在哪些地方耗费性能

cpu 调度的单位是什么

如何让多核 cpu 更好的利用资源

什么是缺页

如何控制两个进程对一个数据的访问？
怎么处理加锁问题

说一说协程

是否了解 netstat

在 shell 中用 ./a.out | wc- l 结果是多少？管道的输入是哪个进程的

谈谈 Linux 的文件权限。让只有拥有者才能读写？让拥有者只能读和执行？ 删除文件需要什么权限

假如一个进程在对文件进行读写，管理员把文件删除了怎么办

协程与进程线程比较有什么优势

计算机从电源加载开始的启动过程

什么是中断调用？中断程序的分类

lsof strace ptrace gdb 使用


什么时候进入内核态
：系统调用，异常，外围设备的中断。
多线程需要加锁的变量：
一般就是同步操作或者互斥操作需要加锁。
程序在内存中的布局：代码段，数据段，堆--，--栈段。--表示增长方向。
--------------------- 

memcached 的内存设计

有哪些服务器模型
循环服务器模型，并发服务器模型，又分为多进程和多线程

tinyhttpd 的基本工作流程



cgi 程序是什么？fastcgi 等等

Apache 和 nginx 中分别如何添加一个网站的访问？如何限制 ip

apache 和 nginx 的不同在哪里

nginx 和 apache 的架构分别是怎样的

memcached 和 redis 的差别是什么

简述 redis 的几个操作

知不知道进程池？有没有用过

redis 的用什么实现持久化？redis 的持久化是否能够信任

memcached 和 redis 为什么不能作为常用数据库

tinyhttpd 中对 HTTP 请求的处理

内存池对不同大小数据结构怎么存储

RPC 有哪几种实现方式？如何提供接口调用

RPC 调用中同步、异步、阻塞、非阻塞的区别
--------------------- 

cookie 和 session 的区别？
get 与 post 的区别？访问安全性是否有区别？如何做到真正的访问安全

如果发现网络不能访问会检查哪些方面？如果只有某个网站不能访问

没有登陆后台的情况猜测服务器挂掉会是什么原因？如果你是网站管理员用户反馈你的网站不能访问应该怎么做

在后台发现运行程序卡时应该怎么做？检查哪些方面

介绍 HTTPS。
能否截获 HTTPS 的数据包
--------------------- 

数据库之间如何同步
怎么保证数据库同时操作几个表的一致性
怎么保证主从服务器中数据库的同步
数据库 ACID 是什么
关系型数据库和非关系型数据库的区别
MySQL 的锁的类型
什么时候 MySQL 会对表上锁？对一行上锁
行级锁、表级锁的区别
高并发访问 MYSQL 时，如何保持数据一致性
MySQL 有哪些存储引擎？为什么使用 InnoDB
MySQL 如何建立索引
建立 A 列和 B 列的索引需要考虑什么
数据库查询过慢的优化
索引实现机制
--------------------- 
作者：一线涯 
来源：CSDN 
原文：https://blog.csdn.net/jcjc918/article/details/50434462 
版权声明：本文为博主原创文章，转载请附上博文链接！

如何设计一个高性能服务器架构
在集群之间做缓存，一个节点挂了怎么办
集群中 session 的同步
集群之间的消息队列
在集群之间做缓存，一个节点挂了怎么办
有哪些高并发的服务器设计
I/O 复用模型有哪些
select 和 epoll 的区别
秒杀中多个数据库服务器的同步
抢票系统怎么做?
设计 qq 对应所有属性的存储和访问
什么是负载均衡？负载均衡的实现
--------------------- 
作者：一线涯 
来源：CSDN 
原文：https://blog.csdn.net/jcjc918/article/details/50434462 
版权声明：本文为博主原创文章，转载请附上博文链接！

网页中的 js 事件
$( function(){ } ) 是什么意思？和 window.onload 什么区别
用两句话概括 BootStrap
用两句话概括 Jquery


docker

介绍 MVC 模式
SVM 原理
Java 内存回收机制
字节和字符的区别
什么时候用字符读文件，什么时候用字节读文件
写过的最难的程序是什么
成就感最大的项目
单例模式如何实现
中文的编码有哪些
XSS 攻击？举例说明 SQL 注入
用两条能燃烧一个小时的不均匀的香计算 15 分钟
7 个工人 7 小时挖了 7 米的洞，50 小时挖 50 米的洞需要多少人?
--------------------- 
作者：一线涯 
来源：CSDN 
原文：https://blog.csdn.net/jcjc918/article/details/50434462 
版权声明：本文为博主原创文章，转载请附上博文链接！
